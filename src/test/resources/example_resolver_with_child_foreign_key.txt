package com.forsuredb.annotationprocessor.generator.code;

import com.forsuredb.api.FSJoin;
import com.forsuredb.api.FSProjection;
import com.forsuredb.api.ForSureInfoFactory;
import com.forsuredb.api.Resolver;
import com.forsuredb.api.TypedRecordContainer;
import java.lang.Class;
import java.lang.Override;
import java.lang.String;

public class TestTable3Resolver extends Resolver<ResolverGeneratorTest, TypedRecordContainer, TestTable3, TestTable3Setter, TestTable3Finder> {
    public static final String TABLE_NAME = "test_table_3";

    public static final String[] columns = {"_id","app_rating","competitor_app_rating","created","deleted","global_id","login_count","modified",};

    public static final FSProjection PROJECTION = new FSProjection() {
        @Override
        public String tableName() {
            return TABLE_NAME;
        }

        @Override
        public String[] columns() {
            return columns;
        }
    };

    public TestTable3Resolver(ForSureInfoFactory infoFactory) {
        super(infoFactory);
    }

    public TestTable3Resolver joinTestTable2(final FSJoin.Type type) {
        addJoin(new FSJoin() {
            @Override
            public FSJoin.Type type() {
                return type;
            }

            @Override
            public String parentTable() {
                return "test_table_3";
            }

            @Override
            public String parentColumn() {
                return "_id";
            }

            @Override
            public String childTable() {
                return "test_table_2";
            }

            @Override
            public String childColumn() {
                return "test_table_3_id";
            }
        }, TestTable2.PROJECTION);
        return this;
    }

    @Override
    protected Class<TestTable3> getApiClass() {
        return TestTable3.class;
    }

    @Override
    protected Class<TestTable3Setter> setApiClass() {
        return TestTable3Setter.class;
    }

    @Override
    protected FSProjection projection() {
        return PROJECTION;
    }

    @Override
    protected TestTable3Finder newFinderInstance() {
        return new TestTable3Finder(this);
    }

    @Override
    protected String tableName() {
        return TABLE_NAME;
    }
}
